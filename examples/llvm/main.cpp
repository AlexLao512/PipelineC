#include "pipelinec_verilator.h"
#include "verilated.h"
#include "Vtop.h" 
/*
#include "verilated.cpp" //verilator library
#include "obj_dir/Vtop.cpp" //generated by verilator
#include "obj_dir/Vtop__Syms.cpp" //generated by verilator
#define clk clk_None
*/

inline uint32_t float_31_0(float a) { union _noname { float f; uint32_t i;} conv; conv.f = a; return conv.i; }
inline float float_uint32(uint32_t a) { union _noname { float f; uint32_t i;} conv; conv.i = a; return conv.f; }
#include "rsqrtf.c"

#include <iostream>
using namespace std;

int main(int argc, char *argv[]) {
 Vtop* g_top = new Vtop;
    
  g_top->clk = 0;
  g_top->eval();

  g_top->clk = 1;
  g_top->eval();

  float verilator_return = float_uint32(g_top->app_return_output);
  float c_return = app();
  bool pass = abs(verilator_return - c_return) < 1e-6;

  printf("Verilator float %f, uint32 0x%08X, C float %f, uint32 0x%08X: %s\n",
    verilator_return, float_31_0(verilator_return),
    c_return, float_31_0(c_return),
    pass ? "PASS":"FAIL");

  return !pass;
}
